apply plugin: 'maven-publish'
apply plugin: 'signing'

def isReleaseBuild() {
    return VERSION_NAME.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://s01.oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    return hasProperty('ossrhUsername') ? ossrhUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('ossrhPassword') ? ossrhPassword : ""
}

def getSigningKeyID(){
    return hasProperty("mavenGpgKeyId") ? mavenGpgKeyId : ""
}

def getSigningKey(){
    return hasProperty("mavenGpgKey") ? mavenGpgKey: ""
}

afterEvaluate { project ->

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from android.sourceSets.main.java.sourceFiles
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/likeazir/appkit")
                credentials {
                    username = System.getenv("USERNAME")
                    password = System.getenv("TOKEN")
                }
            }
        }
        publications {
            release (MavenPublication) {
                from components.release
                artifact tasks.androidSourcesJar
                artifact tasks.javadocJar
                groupId = 'eu.ff15.appkit'
                artifactId = project.name
                version = project.version
                pom {
                }
            }
        }
    }
}